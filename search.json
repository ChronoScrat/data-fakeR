[{"path":"https://chronoscrat.github.io/data-fakeR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to data.fakeR","title":"Contributing to data.fakeR","text":"Thank interest contributing data.fakeR! wish get involved, please read document.","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/CONTRIBUTING.html","id":"improvements","dir":"","previous_headings":"","what":"Improvements","title":"Contributing to data.fakeR","text":"best way contribute project improve code. harsh may admit, data.fakeR hastly written, may contain many inefficient lines code. wish improve code’s usability /performance, please feel free open pull request. wish contribute improvement know begin, please look TODO list. Note: submit pull request, please make sure run roxygenize generate necessary documentation code passes tests checks. wish change README file, please make changes README.Rmd run devtools::build_readme().","code":"roxygen2::roxygenise()  devtools::test()  devtools::check()"},{"path":"https://chronoscrat.github.io/data-fakeR/CONTRIBUTING.html","id":"new-features","dir":"","previous_headings":"","what":"New Features","title":"Contributing to data.fakeR","text":"wish propose new feature package, want open pull request, please open issue new feature.","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/CONTRIBUTING.html","id":"bug-report","dir":"","previous_headings":"","what":"Bug Report","title":"Contributing to data.fakeR","text":"wish report bug project, please open issue detailing difficulties found.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://chronoscrat.github.io/data-fakeR/TODO.html","id":null,"dir":"","previous_headings":"","what":"TODO","title":"TODO","text":"list planned improvements data.fakeR. [ ] Add support column type Selection [ ] Add export functions allow users export tables [ ] Add tables’ names returned list create_tables","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nathanael Rolim. Maintainer.","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rolim N (2022). data.fakeR: Data FakeR: Generate fake Data R. https://github.com/ChronoScrat/data-fakeR/, https://chronoscrat.github.io/data-fakeR/.","code":"@Manual{,   title = {data.fakeR: Data FakeR: Generate fake Data in R},   author = {Nathanael Rolim},   year = {2022},   note = {https://github.com/ChronoScrat/data-fakeR/, https://chronoscrat.github.io/data-fakeR/}, }"},{"path":"https://chronoscrat.github.io/data-fakeR/index.html","id":"datafaker-generate-fake-data-in-r","dir":"","previous_headings":"","what":"Data FakeR: Generate fake Data in R","title":"Data FakeR: Generate fake Data in R","text":"data.fakeR R library helps generate fake datasets format given schema. R version dunnhumby’s data-faker, originally built Scala. package still initial release, may change time.","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data FakeR: Generate fake Data in R","text":"install data.fakeR, run:","code":"if(!require(devtools)) install.packages(devtools) devtools::install_github(\"ChronoScrat/data-fakeR\")"},{"path":"https://chronoscrat.github.io/data-fakeR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Data FakeR: Generate fake Data in R","text":"use data.fakeR, first must create YAML file schema tables, call import_schema import list R.","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/index.html","id":"schema-example","dir":"","previous_headings":"Usage","what":"Schema example","title":"Data FakeR: Generate fake Data in R","text":"schema create two tables: one named students, 500 rows two columns; one named schools, 10 rows two columns. tables returned inside list function create_tables.","code":"tables:     - name: students       rows: 500       columns:       - name: student_id         data_type: Integer         column_type: Sequential         start: 1         step: 1       - name: birthday         data_type: Date         column_type: Random         min: 2000-01-01         max: 2016-12-31          - name: schools       rows: 10       columns:       - name: school_id         data_type: Integer         column_type: Sequential         start: 1         step: 1       - name: school_code         data_type: Character         column_type: Expression         expression: paste0(\"SCHL\",school_id)"},{"path":[]},{"path":"https://chronoscrat.github.io/data-fakeR/index.html","id":"column-types","dir":"","previous_headings":"Usage > Schema Configuration","what":"Column Types","title":"Data FakeR: Generate fake Data in R","text":"Fixed: Supported data types: Character, Integer, Double, Date, Timestamp Logical Required fields: value - column value Random: Supported data types: Integer, Double, Date, Timestamp Logical Required fields: min - minimum bound random data max - maximum bound random data Sequential: Supported data types: Integer, Double, Date Timestamp Required fields: start - starting value step - increment row Expression: Supported data types: Character (Optional) Required fields: expression - R expression evaluated. Obs: Operations performed row-wise. dplyr package used perform expression: consequence, -else operation must vectorised, preferably called ifelse() function dplyr package. complex operations may fail.","code":"table <- table |>   dplyr::mutate( {COLUMN_NAME} = {EXPRESSION} )"},{"path":"https://chronoscrat.github.io/data-fakeR/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Data FakeR: Generate fake Data in R","text":"want contribute package, please read contribution guide. Also read TODO list planned addition package.","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/reference/create_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Create column — create_column","title":"Create column — create_column","text":"function creates column 'frame' dataframe based  specification provided 'clmnList' list.","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/reference/create_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create column — create_column","text":"","code":"create_column(clmnList, frame)"},{"path":"https://chronoscrat.github.io/data-fakeR/reference/create_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create column — create_column","text":"clmnList list detailing schema column frame dataframe column inserted ","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/reference/create_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create column — create_column","text":"Dataframe","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/reference/create_column.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create column — create_column","text":"Nathanael Rolim Nathanael.Rolim@gamail.com","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/reference/create_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Tables — create_tables","title":"Create Tables — create_tables","text":"function creates tables provided configuration schema. Normally,  returns dataframes. function can used , better called  `import_schema`.s","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/reference/create_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Tables — create_tables","text":"","code":"create_tables(list)"},{"path":"https://chronoscrat.github.io/data-fakeR/reference/create_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Tables — create_tables","text":"list list object created YAML file.","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/reference/create_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Tables — create_tables","text":"list dataframes specified schema list.","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/reference/import_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Import schema — import_schema","title":"Import schema — import_schema","text":"wrapper function reading YAML schema file. calls `verify_schema` test whether  imported schema correct use package.","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/reference/import_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import schema — import_schema","text":"","code":"import_schema(file = \"\")"},{"path":"https://chronoscrat.github.io/data-fakeR/reference/import_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import schema — import_schema","text":"file YAML schema file","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/reference/import_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import schema — import_schema","text":"list containing tables schema.","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/reference/import_schema.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import schema — import_schema","text":"Nathanael Rolim Nathanael.Rolim@gamail.com","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/reference/import_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import schema — import_schema","text":"","code":"if (FALSE) {  importParse(\"_faker.yaml\")  }"},{"path":"https://chronoscrat.github.io/data-fakeR/reference/verify_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify Schema — verify_schema","title":"Verify Schema — verify_schema","text":"function takes list generated importing YAML file  verifies matches necessary schema.","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/reference/verify_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify Schema — verify_schema","text":"","code":"verify_schema(list)"},{"path":"https://chronoscrat.github.io/data-fakeR/reference/verify_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify Schema — verify_schema","text":"list list object created YAML file.","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/reference/verify_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify Schema — verify_schema","text":"Returns `TRUE` schema parses correctly, fails otherwise.","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/reference/verify_schema.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Verify Schema — verify_schema","text":"function verify whether given schema correct use  `data.fakeR` package. performs following checks: 1 - First, verifies whether list named `tables` exists. , verifies whether list contains least one element. 2 - Second, checks table: () named, (b) given number rows, (c) least one column. 3 - Finally, loops columns determine : () name, (b) valid data type (given column type), (c) valid column type.","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/reference/verify_schema.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Verify Schema — verify_schema","text":"Nathanael Rolim Nathanael.Rolim@gamail.com","code":""},{"path":"https://chronoscrat.github.io/data-fakeR/reference/verify_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify Schema — verify_schema","text":"","code":"if (FALSE) {   schm <- yaml::read_yaml(\"schema.yaml\")   verify_schema(schm)  }"}]
